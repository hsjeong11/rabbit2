spring.application.name=demo

spring:
  cloud:
    stream:
      bindings:
        test1:
          destination: test1
          group: consumer-group
        test2:
          destination: test2
          group: consumer-group
        test3:
          destination: test3
          group: consumer-group
        email-broker1:
          destination: email-broker1
          group: consumer-group
        email-broker2:
          destination: email-broker2
          group: consumer-group
        output-exchange:
          destination: email-exchange
          producer:
            requiredGroups: email-group
      rabbit:
        bindings:
          output-exchange:
            exchangeType: topic
            exchangeDurable: true

  rabbitmq:
    host: 101.55.69.114
    port: 30498
    username: rabbit
    password: rabbit

# spring:
#   rabbitmq:
#     host: localhost
#     port: 5672
#     # username: guest
#     # password: guest
#     username: rabbit # 3. admin, vhost 추가한 경우
#     password: rabbit # 3. admin, vhost 추가한 경우
#     #virtual-host: gutsandgun # 3. admin, vhost 추가한 경우
    
# rabbitmq:
#   api:  # rabbit MQ API 호출을 위해 작성
#     port: 5672
#     queue: /api/queues
#     queue-detail: /api/queues/
#   queue:  # queue 연동을 위해 작성
#     queue1:
#       name: test1
#       exchange: test1
#     queue2:
#       name: test2
#       exchange: test2
#     queue3:
#       name: test3
#       exchange: test3
#     queue4:
#       name: email-broker1
#       exchange: email-exchange
#     queue5:
#       name: email-broker2
#       exchange: email-exchange
#     routing:
#       key:  # exchange
#         queue1: test1
#         queue2: test2
#         queue3: test3
#         queue5: email-broker1
#         queue6: email-broker2
